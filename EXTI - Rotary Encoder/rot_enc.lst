;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 16-Jul-22 02:21:22 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x0201BB  	LJMP 443
0x0003	0x0201FA  	LJMP 506
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x020000  	LJMP 0
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x020000  	LJMP 0
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020000  	LJMP 0
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
0x0026	0x00      	NOP
0x0027	0x00      	NOP
0x0028	0x00      	NOP
0x0029	0x00      	NOP
0x002A	0x00      	NOP
0x002B	0x020000  	LJMP 0
0x002E	0x00      	NOP
0x002F	0x00      	NOP
0x0030	0x00      	NOP
0x0031	0x00      	NOP
0x0032	0x00      	NOP
0x0033	0x020000  	LJMP 0
0x0036	0x00      	NOP
0x0037	0x00      	NOP
0x0038	0x00      	NOP
0x0039	0x00      	NOP
0x003A	0x00      	NOP
0x003B	0x020000  	LJMP 0
0x003E	0x00      	NOP
0x003F	0x00      	NOP
0x0040	0x00      	NOP
0x0041	0x00      	NOP
0x0042	0x00      	NOP
0x0043	0x020000  	LJMP 0
0x0046	0x00      	NOP
0x0047	0x00      	NOP
0x0048	0x00      	NOP
0x0049	0x00      	NOP
0x004A	0x00      	NOP
0x004B	0x020000  	LJMP 0
0x004E	0x00      	NOP
0x004F	0x00      	NOP
0x0050	0x00      	NOP
0x0051	0x00      	NOP
0x0052	0x00      	NOP
0x0053	0x020000  	LJMP 0
0x0056	0x00      	NOP
0x0057	0x00      	NOP
0x0058	0x00      	NOP
0x0059	0x00      	NOP
0x005A	0x00      	NOP
0x005B	0x020000  	LJMP 0
0x005E	0x00      	NOP
0x005F	0x00      	NOP
0x0060	0x00      	NOP
0x0061	0x00      	NOP
0x0062	0x00      	NOP
0x0063	0x020000  	LJMP 0
0x0066	0x00      	NOP
0x0067	0x00      	NOP
0x0068	0x00      	NOP
0x0069	0x00      	NOP
0x006A	0x00      	NOP
0x006B	0x020000  	LJMP 0
0x006E	0x00      	NOP
0x006F	0x00      	NOP
0x0070	0x00      	NOP
0x0071	0x00      	NOP
0x0072	0x00      	NOP
0x0073	0x020277  	LJMP 631
_Oscillator_Init:
;rot_enc.c,193 :: 		void Oscillator_Init(void)
;rot_enc.c,195 :: 		OSCICN = 0x82;
0x0076	0x75B282  	MOV OSCICN, #130
;rot_enc.c,196 :: 		}
0x0079	0x22      	RET
; end of _Oscillator_Init
_PCA_Init:
;rot_enc.c,153 :: 		void PCA_Init(void)
;rot_enc.c,155 :: 		PCA0MD &= ~0x40;
0x007A	0x53D9BF  	ANL PCA0MD, #191
;rot_enc.c,156 :: 		PCA0MD = 0x00;
0x007D	0x75D900  	MOV PCA0MD, #0
;rot_enc.c,157 :: 		}
0x0080	0x22      	RET
; end of _PCA_Init
_Interrupts_Init:
;rot_enc.c,198 :: 		void Interrupts_Init(void)
;rot_enc.c,200 :: 		IE = 0x81;
0x0081	0x75A881  	MOV IE, #129
;rot_enc.c,201 :: 		IP = 0x01;
0x0084	0x75B801  	MOV IP, #1
;rot_enc.c,202 :: 		EIE1 = 0x80;
0x0087	0x75E680  	MOV EIE1, #128
;rot_enc.c,203 :: 		}
0x008A	0x22      	RET
; end of _Interrupts_Init
_write_74HC595:
;rot_enc.c,216 :: 		void write_74HC595(unsigned char send_data)
;rot_enc.c,218 :: 		signed char clks = 8;
0x008B	0x750B08  	MOV write_74HC595_clks_L0, #8
;rot_enc.c,220 :: 		while(clks > 0)
L_write_74HC59518:
0x008E	0xD3      	SETB C
0x008F	0x7400    	MOV A, #0
0x0091	0x6480    	XRL A, #128
0x0093	0xF8      	MOV R0, A
0x0094	0xE50B    	MOV A, write_74HC595_clks_L0
0x0096	0x6480    	XRL A, #128
0x0098	0x98      	SUBB A, R0
0x0099	0x4022    	JC L_write_74HC59519
;rot_enc.c,222 :: 		if((send_data & 0x80) == 0x00)
0x009B	0xE50A    	MOV A, FARG_write_74HC595_send_data
0x009D	0x5480    	ANL A, #128
0x009F	0xF9      	MOV R1, A
0x00A0	0x7004    	JNZ L_write_74HC59520
;rot_enc.c,224 :: 		LED_DOUT = 0;
0x00A2	0xC296    	CLR P1_6_bit
;rot_enc.c,225 :: 		}
0x00A4	0x8002    	SJMP L_write_74HC59521
L_write_74HC59520:
;rot_enc.c,228 :: 		LED_DOUT = 1;
0x00A6	0xD296    	SETB P1_6_bit
;rot_enc.c,229 :: 		}
L_write_74HC59521:
;rot_enc.c,231 :: 		LED_CLK = 0;
0x00A8	0xC295    	CLR P1_5_bit
;rot_enc.c,232 :: 		send_data <<= 1;
0x00AA	0x7801    	MOV R0, #1
0x00AC	0xE50A    	MOV A, FARG_write_74HC595_send_data
0x00AE	0x08      	INC R0
0x00AF	0x8002    	SJMP L__write_74HC59522
L__write_74HC59523:
0x00B1	0xC3      	CLR C
0x00B2	0x33      	RLC A
L__write_74HC59522:
0x00B3	0xD8FC    	DJNZ R0, L__write_74HC59523
0x00B5	0xF50A    	MOV FARG_write_74HC595_send_data, A
;rot_enc.c,233 :: 		clks--;
0x00B7	0x150B    	DEC write_74HC595_clks_L0
;rot_enc.c,234 :: 		LED_CLK = 1;
0x00B9	0xD295    	SETB P1_5_bit
;rot_enc.c,235 :: 		}
0x00BB	0x80D1    	SJMP L_write_74HC59518
L_write_74HC59519:
;rot_enc.c,236 :: 		}
0x00BD	0x22      	RET
; end of _write_74HC595
_Div_16x16_U:
;__Lib_Math.c,273 :: 		
;__Lib_Math.c,275 :: 		
0x00BE	0xBD000B  	CJNE R5, 0, __op2hi_not_zero
;__Lib_Math.c,276 :: 		
0x00C1	0xB90029  	CJNE R1, 0, __op1hi_not_zero
;__Lib_Math.c,277 :: 		
0x00C4	0xE8      	MOV A, R0
;__Lib_Math.c,278 :: 		
0x00C5	0x8CF0    	MOV B, R4
;__Lib_Math.c,279 :: 		
0x00C7	0x84      	DIV AB
;__Lib_Math.c,280 :: 		
0x00C8	0xF8      	MOV R0, A
;__Lib_Math.c,281 :: 		
0x00C9	0xACF0    	MOV R4, B
;__Lib_Math.c,282 :: 		
0x00CB	0x22      	RET
;__Lib_Math.c,284 :: 		
__op2hi_not_zero:
;__Lib_Math.c,285 :: 		
0x00CC	0xE4      	CLR A
;__Lib_Math.c,286 :: 		
0x00CD	0xCD      	XCH A, R5
;__Lib_Math.c,287 :: 		
0x00CE	0xFF      	MOV R7, A
;__Lib_Math.c,288 :: 		
0x00CF	0x75F008  	MOV B, 8
;__Lib_Math.c,290 :: 		
__Div_16x16_U_Loop1:
;__Lib_Math.c,291 :: 		
0x00D2	0xE8      	MOV A, R0
;__Lib_Math.c,292 :: 		
0x00D3	0x28      	ADD A, R0
;__Lib_Math.c,293 :: 		
0x00D4	0xF8      	MOV R0, A
;__Lib_Math.c,294 :: 		
0x00D5	0xE9      	MOV A, R1
;__Lib_Math.c,295 :: 		
0x00D6	0x33      	RLC A
;__Lib_Math.c,296 :: 		
0x00D7	0xF9      	MOV R1, A
;__Lib_Math.c,297 :: 		
0x00D8	0xED      	MOV A, R5
;__Lib_Math.c,298 :: 		
0x00D9	0x33      	RLC A
;__Lib_Math.c,299 :: 		
0x00DA	0xFD      	MOV R5, A
;__Lib_Math.c,300 :: 		
0x00DB	0xE9      	MOV A, R1
;__Lib_Math.c,301 :: 		
0x00DC	0x9C      	SUBB A, R4
;__Lib_Math.c,302 :: 		
0x00DD	0xED      	MOV A, R5
;__Lib_Math.c,303 :: 		
0x00DE	0x9F      	SUBB A, R7
;__Lib_Math.c,304 :: 		
0x00DF	0x4005    	JC __Div_16x16_U_Lab1
;__Lib_Math.c,305 :: 		
0x00E1	0xFD      	MOV R5, A
;__Lib_Math.c,306 :: 		
0x00E2	0xE9      	MOV A, R1
;__Lib_Math.c,307 :: 		
0x00E3	0x9C      	SUBB A, R4
;__Lib_Math.c,308 :: 		
0x00E4	0xF9      	MOV R1, A
;__Lib_Math.c,309 :: 		
0x00E5	0x08      	INC R0
;__Lib_Math.c,311 :: 		
__Div_16x16_U_Lab1:
;__Lib_Math.c,312 :: 		
0x00E6	0xD5F0E9  	DJNZ B, __Div_16x16_U_Loop1
;__Lib_Math.c,313 :: 		
0x00E9	0xE4      	CLR A
;__Lib_Math.c,314 :: 		
0x00EA	0xC9      	XCH A, R1
;__Lib_Math.c,315 :: 		
0x00EB	0xFC      	MOV R4, A
;__Lib_Math.c,316 :: 		
0x00EC	0x22      	RET
;__Lib_Math.c,318 :: 		
__op1hi_not_zero:
;__Lib_Math.c,319 :: 		
0x00ED	0xEC      	MOV A, R4
;__Lib_Math.c,320 :: 		
0x00EE	0xFF      	MOV R7, A
;__Lib_Math.c,321 :: 		
0x00EF	0xF5F0    	MOV B, A
;__Lib_Math.c,322 :: 		
0x00F1	0xE9      	MOV A, R1
;__Lib_Math.c,323 :: 		
0x00F2	0x84      	DIV AB
;__Lib_Math.c,324 :: 		
0x00F3	0x20D21C  	JB OV_bit, __Div_16x16_U_div_ret
;__Lib_Math.c,325 :: 		
0x00F6	0xF9      	MOV R1, A
;__Lib_Math.c,326 :: 		
0x00F7	0xACF0    	MOV R4, B
;__Lib_Math.c,327 :: 		
0x00F9	0x75F008  	MOV B, 8
;__Lib_Math.c,329 :: 		
__Div_16x16_U_Loop2:
;__Lib_Math.c,330 :: 		
0x00FC	0xE8      	MOV A, R0
;__Lib_Math.c,331 :: 		
0x00FD	0x28      	ADD A, R0
;__Lib_Math.c,332 :: 		
0x00FE	0xF8      	MOV R0, A
;__Lib_Math.c,333 :: 		
0x00FF	0xEC      	MOV A, R4
;__Lib_Math.c,334 :: 		
0x0100	0x33      	RLC A
;__Lib_Math.c,335 :: 		
0x0101	0xFC      	MOV R4, A
;__Lib_Math.c,336 :: 		
0x0102	0x4007    	JC __Div_16x16_U_Lab2
;__Lib_Math.c,337 :: 		
0x0104	0x9F      	SUBB A, R7
;__Lib_Math.c,338 :: 		
0x0105	0x5006    	JNC __Div_16x16_U_Lab3
;__Lib_Math.c,339 :: 		
0x0107	0xD5F0F2  	DJNZ B, __Div_16x16_U_Loop2
;__Lib_Math.c,340 :: 		
0x010A	0x22      	RET
;__Lib_Math.c,342 :: 		
__Div_16x16_U_Lab2:
;__Lib_Math.c,343 :: 		
0x010B	0xC3      	CLR C
;__Lib_Math.c,344 :: 		
0x010C	0x9F      	SUBB A, R7
;__Lib_Math.c,345 :: 		
__Div_16x16_U_Lab3:
;__Lib_Math.c,346 :: 		
0x010D	0xFC      	MOV R4, A
;__Lib_Math.c,347 :: 		
0x010E	0x08      	INC R0
;__Lib_Math.c,348 :: 		
0x010F	0xD5F0EA  	DJNZ B, __Div_16x16_U_Loop2
;__Lib_Math.c,350 :: 		
__Div_16x16_U_div_ret:
;__Lib_Math.c,352 :: 		
0x0112	0x22      	RET
; end of _Div_16x16_U
_Port_IO_Init:
;rot_enc.c,167 :: 		void Port_IO_Init(void)
;rot_enc.c,187 :: 		P1MDOUT = 0xE0;
0x0113	0x75A5E0  	MOV P1MDOUT, #224
;rot_enc.c,188 :: 		P0SKIP = 0x07;
0x0116	0x75D407  	MOV P0SKIP, #7
;rot_enc.c,189 :: 		P1SKIP = 0xE0;
0x0119	0x75D5E0  	MOV P1SKIP, #224
;rot_enc.c,190 :: 		XBR1 = 0x40;
0x011C	0x75E240  	MOV XBR1, #64
;rot_enc.c,191 :: 		}
0x011F	0x22      	RET
; end of _Port_IO_Init
_Timer_Init:
;rot_enc.c,159 :: 		void Timer_Init(void)
;rot_enc.c,161 :: 		TCON = 0x01;
0x0120	0x758801  	MOV TCON, #1
;rot_enc.c,162 :: 		TMR3CN = 0x04;
0x0123	0x759104  	MOV TMR3CN, #4
;rot_enc.c,163 :: 		TMR3RLL = 0x02;
0x0126	0x759202  	MOV TMR3RLL, #2
;rot_enc.c,164 :: 		TMR3RLH = 0xFC;
0x0129	0x7593FC  	MOV TMR3RLH, #252
;rot_enc.c,165 :: 		}
0x012C	0x22      	RET
; end of _Timer_Init
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x012D	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x012E	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x012F	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x0130	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x0131	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x0132	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x0134	0x22      	RET
; end of ___CC2D
_Div_16x16_S:
;__Lib_Math.c,371 :: 		
;__Lib_Math.c,373 :: 		
0x0135	0xC2D5    	CLR F0_bit
;__Lib_Math.c,374 :: 		
0x0137	0xED      	MOV A, R5
;__Lib_Math.c,375 :: 		
0x0138	0x30E709  	JNB 231, __Div_16x16_S_op2hipositive
;__Lib_Math.c,376 :: 		
0x013B	0xB2D5    	CPL F0_bit
;__Lib_Math.c,377 :: 		
0x013D	0xE4      	CLR A
;__Lib_Math.c,378 :: 		
0x013E	0xC3      	CLR C
;__Lib_Math.c,379 :: 		
0x013F	0x9C      	SUBB A, R4
;__Lib_Math.c,380 :: 		
0x0140	0xFC      	MOV R4, A
;__Lib_Math.c,381 :: 		
0x0141	0xE4      	CLR A
;__Lib_Math.c,382 :: 		
0x0142	0x9D      	SUBB A, R5
;__Lib_Math.c,383 :: 		
0x0143	0xFD      	MOV R5, A
;__Lib_Math.c,385 :: 		
__Div_16x16_S_op2hipositive:
;__Lib_Math.c,386 :: 		
0x0144	0xE9      	MOV A, R1
;__Lib_Math.c,387 :: 		
0x0145	0x30E715  	JNB 231, __Div_16x16_S_op1hipositive
;__Lib_Math.c,388 :: 		
0x0148	0xB2D5    	CPL F0_bit
;__Lib_Math.c,389 :: 		
0x014A	0xE4      	CLR A
;__Lib_Math.c,390 :: 		
0x014B	0xC3      	CLR C
;__Lib_Math.c,391 :: 		
0x014C	0x98      	SUBB A, R0
;__Lib_Math.c,392 :: 		
0x014D	0xF8      	MOV R0, A
;__Lib_Math.c,393 :: 		
0x014E	0xE4      	CLR A
;__Lib_Math.c,394 :: 		
0x014F	0x99      	SUBB A, R1
;__Lib_Math.c,395 :: 		
0x0150	0xF9      	MOV R1, A
;__Lib_Math.c,396 :: 		
0x0151	0x1200BE  	LCALL _Div_16x16_U
;__Lib_Math.c,397 :: 		
0x0154	0xC3      	CLR C
;__Lib_Math.c,398 :: 		
0x0155	0xE4      	CLR A
;__Lib_Math.c,399 :: 		
0x0156	0x9C      	SUBB A, R4
;__Lib_Math.c,400 :: 		
0x0157	0xFC      	MOV R4, A
;__Lib_Math.c,401 :: 		
0x0158	0xE4      	CLR A
;__Lib_Math.c,402 :: 		
0x0159	0x9D      	SUBB A, R5
;__Lib_Math.c,403 :: 		
0x015A	0xFD      	MOV R5, A
;__Lib_Math.c,404 :: 		
0x015B	0x8003    	SJMP __Div_16x16_S_Skip_Udiv
;__Lib_Math.c,406 :: 		
__Div_16x16_S_op1hipositive:
;__Lib_Math.c,407 :: 		
0x015D	0x1200BE  	LCALL _Div_16x16_U
;__Lib_Math.c,409 :: 		
__Div_16x16_S_Skip_Udiv:
;__Lib_Math.c,410 :: 		
0x0160	0x30D507  	JNB F0_bit, __Div_16x16_S_div_ret
;__Lib_Math.c,411 :: 		
0x0163	0xC3      	CLR C
;__Lib_Math.c,412 :: 		
0x0164	0xE4      	CLR A
;__Lib_Math.c,413 :: 		
0x0165	0x98      	SUBB A, R0
;__Lib_Math.c,414 :: 		
0x0166	0xF8      	MOV R0, A
;__Lib_Math.c,415 :: 		
0x0167	0xE4      	CLR A
;__Lib_Math.c,416 :: 		
0x0168	0x99      	SUBB A, R1
;__Lib_Math.c,417 :: 		
0x0169	0xF9      	MOV R1, A
;__Lib_Math.c,419 :: 		
__Div_16x16_S_div_ret:
;__Lib_Math.c,421 :: 		
0x016A	0x22      	RET
; end of _Div_16x16_S
_segment_write:
;rot_enc.c,239 :: 		void segment_write(unsigned char disp, unsigned char pos)
;rot_enc.c,241 :: 		write_74HC595(segment_code[disp]);
0x016B	0xE508    	MOV A, FARG_segment_write_disp
0x016D	0x2427    	ADD A, lo_addr(_segment_code)
0x016F	0xF9      	MOV R1, A
0x0170	0xE4      	CLR A
0x0171	0x3403    	ADDC A, hi_addr(_segment_code)
0x0173	0xFA      	MOV R2, A
0x0174	0x850182  	MOV DPL, 1
0x0177	0x850283  	MOV DPH, 2
0x017A	0xE4      	CLR A
0x017B	0x93      	MOVC A, @A+DPTR
0x017C	0xF8      	MOV R0, A
0x017D	0x85000A  	MOV FARG_write_74HC595_send_data, 0
0x0180	0x118B    	ACALL _write_74HC595
;rot_enc.c,242 :: 		write_74HC595(display_pos[pos]);
0x0182	0xE509    	MOV A, FARG_segment_write_pos
0x0184	0x243C    	ADD A, lo_addr(_display_pos)
0x0186	0xF9      	MOV R1, A
0x0187	0xE4      	CLR A
0x0188	0x3403    	ADDC A, hi_addr(_display_pos)
0x018A	0xFA      	MOV R2, A
0x018B	0x850182  	MOV DPL, 1
0x018E	0x850283  	MOV DPH, 2
0x0191	0xE4      	CLR A
0x0192	0x93      	MOVC A, @A+DPTR
0x0193	0xF8      	MOV R0, A
0x0194	0x85000A  	MOV FARG_write_74HC595_send_data, 0
0x0197	0x118B    	ACALL _write_74HC595
;rot_enc.c,243 :: 		LED_LATCH = 0;
0x0199	0xC297    	CLR P1_7_bit
;rot_enc.c,244 :: 		LED_LATCH = 1;
0x019B	0xD297    	SETB P1_7_bit
;rot_enc.c,245 :: 		}
0x019D	0x22      	RET
; end of _segment_write
_Mul_16x16:
;__Lib_Math.c,112 :: 		
;__Lib_Math.c,114 :: 		
0x019E	0xE8      	MOV A, R0
;__Lib_Math.c,115 :: 		
0x019F	0x8CF0    	MOV B, R4
;__Lib_Math.c,116 :: 		
0x01A1	0xA4      	MUL AB
;__Lib_Math.c,117 :: 		
0x01A2	0xAFF0    	MOV R7, B
;__Lib_Math.c,118 :: 		
0x01A4	0xC8      	XCH A, R0
;__Lib_Math.c,119 :: 		
0x01A5	0x8DF0    	MOV B, R5
;__Lib_Math.c,120 :: 		
0x01A7	0xA4      	MUL AB
;__Lib_Math.c,121 :: 		
0x01A8	0x2F      	ADD A, R7
;__Lib_Math.c,122 :: 		
0x01A9	0xC9      	XCH A, R1
;__Lib_Math.c,123 :: 		
0x01AA	0x8CF0    	MOV B, R4
;__Lib_Math.c,124 :: 		
0x01AC	0xA4      	MUL AB
;__Lib_Math.c,125 :: 		
0x01AD	0x29      	ADD A, R1
;__Lib_Math.c,126 :: 		
0x01AE	0xF9      	MOV R1, A
;__Lib_Math.c,128 :: 		
0x01AF	0x22      	RET
; end of _Mul_16x16
_Init_Device:
;rot_enc.c,206 :: 		void Init_Device(void)
;rot_enc.c,208 :: 		PCA_Init();
0x01B0	0x117A    	ACALL _PCA_Init
;rot_enc.c,209 :: 		Timer_Init();
0x01B2	0x3120    	ACALL _Timer_Init
;rot_enc.c,210 :: 		Port_IO_Init();
0x01B4	0x3113    	ACALL _Port_IO_Init
;rot_enc.c,211 :: 		Oscillator_Init();
0x01B6	0x1176    	ACALL _Oscillator_Init
;rot_enc.c,212 :: 		Interrupts_Init();
0x01B8	0x1181    	ACALL _Interrupts_Init
;rot_enc.c,213 :: 		}
0x01BA	0x22      	RET
; end of _Init_Device
_main:
0x01BB	0x758180  	MOV SP, #128
0x01BE	0x120340  	LCALL 832
;rot_enc.c,132 :: 		void main(void)
;rot_enc.c,134 :: 		Init_Device();
0x01C1	0x31B0    	ACALL _Init_Device
;rot_enc.c,136 :: 		while(1)
L_main12:
;rot_enc.c,138 :: 		if(ROT_ENC_SW == 0)
0x01C3	0x208230  	JB P0_2_bit, L_main14
;rot_enc.c,140 :: 		delay_ms(60);
0x01C6	0x7D04    	MOV R5, 4
0x01C8	0x7EBB    	MOV R6, 187
0x01CA	0x7F87    	MOV R7, 135
0x01CC	0xDFFE    	DJNZ R7, PC-2
0x01CE	0xDEFC    	DJNZ R6, PC-4
0x01D0	0xDDFA    	DJNZ R5, PC-6
;rot_enc.c,141 :: 		while(ROT_ENC_SW == 0);
L_main15:
0x01D2	0x208202  	JB P0_2_bit, L_main16
0x01D5	0x80FB    	SJMP L_main15
L_main16:
;rot_enc.c,142 :: 		step_size *= 10;
0x01D7	0xA833    	MOV R0, _step_size
0x01D9	0xA934    	MOV R1, _step_size+1
0x01DB	0x7C0A    	MOV R4, #10
0x01DD	0x7D00    	MOV R5, #0
0x01DF	0x319E    	ACALL _Mul_16x16
0x01E1	0x850033  	MOV _step_size, 0
0x01E4	0x850134  	MOV _step_size+1, 1
;rot_enc.c,144 :: 		if(step_size > 1000)
0x01E7	0xD3      	SETB C
0x01E8	0xE8      	MOV A, R0
0x01E9	0x94E8    	SUBB A, #232
0x01EB	0xE9      	MOV A, R1
0x01EC	0x9403    	SUBB A, #3
0x01EE	0x4006    	JC L_main17
;rot_enc.c,146 :: 		step_size = 1;
0x01F0	0x753301  	MOV _step_size, #1
0x01F3	0x753400  	MOV _step_size+1, #0
;rot_enc.c,147 :: 		}
L_main17:
;rot_enc.c,148 :: 		}
L_main14:
;rot_enc.c,149 :: 		};
0x01F6	0x80CB    	SJMP L_main12
;rot_enc.c,150 :: 		}
0x01F8	0x80FE    	SJMP #254
; end of _main
_EXTI_0_ISR:
0x01FA	0xC000    	PUSH R0
0x01FC	0xC0D0    	PUSH PSW
0x01FE	0xC0E0    	PUSH ACC
0x0200	0xC0F0    	PUSH B
0x0202	0xC082    	PUSH DPL
0x0204	0xC083    	PUSH DPH
;rot_enc.c,58 :: 		ics ICS_AUTO
;rot_enc.c,60 :: 		present_clock_state = ROT_ENC_CLK;
0x0206	0xA281    	MOV C, P0_1_bit
0x0208	0xE4      	CLR A
0x0209	0x33      	RLC A
0x020A	0xF530    	MOV _present_clock_state, A
;rot_enc.c,61 :: 		data_state = ROT_ENC_DATA;
0x020C	0xA280    	MOV C, P0_0_bit
0x020E	0xE4      	CLR A
0x020F	0x33      	RLC A
0x0210	0xF538    	MOV _data_state, A
;rot_enc.c,63 :: 		if(present_clock_state != past_clock_state)
0x0212	0xE530    	MOV A, _present_clock_state
0x0214	0x6535    	XRL A, _past_clock_state
0x0216	0x6024    	JZ L_EXTI_0_ISR0
;rot_enc.c,65 :: 		if(data_state != present_clock_state)
0x0218	0xE538    	MOV A, _data_state
0x021A	0x6530    	XRL A, _present_clock_state
0x021C	0x600F    	JZ L_EXTI_0_ISR1
;rot_enc.c,67 :: 		value -= step_size;
0x021E	0xC3      	CLR C
0x021F	0xE536    	MOV A, _value
0x0221	0x9533    	SUBB A, _step_size
0x0223	0xF536    	MOV _value, A
0x0225	0xE537    	MOV A, _value+1
0x0227	0x9534    	SUBB A, _step_size+1
0x0229	0xF537    	MOV _value+1, A
;rot_enc.c,68 :: 		}
0x022B	0x800C    	SJMP L_EXTI_0_ISR2
L_EXTI_0_ISR1:
;rot_enc.c,71 :: 		value += step_size;
0x022D	0xE536    	MOV A, _value
0x022F	0x2533    	ADD A, _step_size
0x0231	0xF536    	MOV _value, A
0x0233	0xE537    	MOV A, _value+1
0x0235	0x3534    	ADDC A, _step_size+1
0x0237	0xF537    	MOV _value+1, A
;rot_enc.c,72 :: 		}
L_EXTI_0_ISR2:
;rot_enc.c,74 :: 		past_clock_state = present_clock_state;
0x0239	0x853035  	MOV _past_clock_state, _present_clock_state+0
;rot_enc.c,75 :: 		}
L_EXTI_0_ISR0:
;rot_enc.c,77 :: 		if(value > 9999)
0x023C	0xD3      	SETB C
0x023D	0xE536    	MOV A, _value
0x023F	0x940F    	SUBB A, #15
0x0241	0x7427    	MOV A, #39
0x0243	0x6480    	XRL A, #128
0x0245	0xF8      	MOV R0, A
0x0246	0xE537    	MOV A, _value+1
0x0248	0x6480    	XRL A, #128
0x024A	0x98      	SUBB A, R0
0x024B	0x4006    	JC L_EXTI_0_ISR3
;rot_enc.c,79 :: 		value = 0;
0x024D	0x753600  	MOV _value, #0
0x0250	0x753700  	MOV _value+1, #0
;rot_enc.c,80 :: 		}
L_EXTI_0_ISR3:
;rot_enc.c,82 :: 		if(value < 0)
0x0253	0xC3      	CLR C
0x0254	0xE536    	MOV A, _value
0x0256	0x9400    	SUBB A, #0
0x0258	0x7400    	MOV A, #0
0x025A	0x6480    	XRL A, #128
0x025C	0xF8      	MOV R0, A
0x025D	0xE537    	MOV A, _value+1
0x025F	0x6480    	XRL A, #128
0x0261	0x98      	SUBB A, R0
0x0262	0x5006    	JNC L_EXTI_0_ISR4
;rot_enc.c,84 :: 		value = 9999;
0x0264	0x75360F  	MOV _value, #15
0x0267	0x753727  	MOV _value+1, #39
;rot_enc.c,85 :: 		}
L_EXTI_0_ISR4:
;rot_enc.c,86 :: 		}
0x026A	0xD083    	POP DPH
0x026C	0xD082    	POP DPL
0x026E	0xD0F0    	POP B
0x0270	0xD0E0    	POP ACC
0x0272	0xD0D0    	POP PSW
0x0274	0xD000    	POP R0
0x0276	0x32      	RETI
; end of _EXTI_0_ISR
_Timer_3_ISR:
0x0277	0xC000    	PUSH R0
0x0279	0xC001    	PUSH R1
0x027B	0xC002    	PUSH R2
0x027D	0xC004    	PUSH R4
0x027F	0xC005    	PUSH R5
0x0281	0xC007    	PUSH R7
0x0283	0xC0D0    	PUSH PSW
0x0285	0xC0E0    	PUSH ACC
0x0287	0xC0F0    	PUSH B
0x0289	0xC082    	PUSH DPL
0x028B	0xC083    	PUSH DPH
;rot_enc.c,92 :: 		ics ICS_AUTO
;rot_enc.c,94 :: 		switch(i)
0x028D	0x8054    	SJMP L_Timer_3_ISR5
;rot_enc.c,96 :: 		case 0:
L_Timer_3_ISR7:
;rot_enc.c,98 :: 		val = (value / 1000);
0x028F	0x7CE8    	MOV R4, #232
0x0291	0x7D03    	MOV R5, #3
0x0293	0xA836    	MOV R0, _value
0x0295	0xA937    	MOV R1, _value+1
0x0297	0x3135    	ACALL _Div_16x16_S
0x0299	0x850032  	MOV _val, 0
;rot_enc.c,99 :: 		break;
0x029C	0x41F9    	AJMP L_Timer_3_ISR6
;rot_enc.c,101 :: 		case 1:
L_Timer_3_ISR8:
;rot_enc.c,103 :: 		val = ((value % 1000) / 100);
0x029E	0x7CE8    	MOV R4, #232
0x02A0	0x7D03    	MOV R5, #3
0x02A2	0xA836    	MOV R0, _value
0x02A4	0xA937    	MOV R1, _value+1
0x02A6	0x3135    	ACALL _Div_16x16_S
0x02A8	0xA804    	MOV R0, R4
0x02AA	0xA905    	MOV R1, R5
0x02AC	0x7C64    	MOV R4, #100
0x02AE	0x7D00    	MOV R5, #0
0x02B0	0x3135    	ACALL _Div_16x16_S
0x02B2	0x850032  	MOV _val, 0
;rot_enc.c,104 :: 		break;
0x02B5	0x8042    	SJMP L_Timer_3_ISR6
;rot_enc.c,106 :: 		case 2:
L_Timer_3_ISR9:
;rot_enc.c,108 :: 		val = ((value % 100) / 10);
0x02B7	0x7C64    	MOV R4, #100
0x02B9	0x7D00    	MOV R5, #0
0x02BB	0xA836    	MOV R0, _value
0x02BD	0xA937    	MOV R1, _value+1
0x02BF	0x3135    	ACALL _Div_16x16_S
0x02C1	0xA804    	MOV R0, R4
0x02C3	0xA905    	MOV R1, R5
0x02C5	0x7C0A    	MOV R4, #10
0x02C7	0x7D00    	MOV R5, #0
0x02C9	0x3135    	ACALL _Div_16x16_S
0x02CB	0x850032  	MOV _val, 0
;rot_enc.c,109 :: 		break;
0x02CE	0x8029    	SJMP L_Timer_3_ISR6
;rot_enc.c,111 :: 		case 3:
L_Timer_3_ISR10:
;rot_enc.c,113 :: 		val = (value % 10);
0x02D0	0x7C0A    	MOV R4, #10
0x02D2	0x7D00    	MOV R5, #0
0x02D4	0xA836    	MOV R0, _value
0x02D6	0xA937    	MOV R1, _value+1
0x02D8	0x3135    	ACALL _Div_16x16_S
0x02DA	0xA804    	MOV R0, R4
0x02DC	0xA905    	MOV R1, R5
0x02DE	0x850032  	MOV _val, 0
;rot_enc.c,114 :: 		break;
0x02E1	0x8016    	SJMP L_Timer_3_ISR6
;rot_enc.c,116 :: 		}
L_Timer_3_ISR5:
0x02E3	0xE531    	MOV A, _i
0x02E5	0x60A8    	JZ L_Timer_3_ISR7
0x02E7	0xE531    	MOV A, _i
0x02E9	0x6401    	XRL A, #1
0x02EB	0x60B1    	JZ L_Timer_3_ISR8
0x02ED	0xE531    	MOV A, _i
0x02EF	0x6402    	XRL A, #2
0x02F1	0x60C4    	JZ L_Timer_3_ISR9
0x02F3	0xE531    	MOV A, _i
0x02F5	0x6403    	XRL A, #3
0x02F7	0x60D7    	JZ L_Timer_3_ISR10
L_Timer_3_ISR6:
;rot_enc.c,118 :: 		segment_write(val, i);
0x02F9	0x853208  	MOV FARG_segment_write_disp, _val+0
0x02FC	0x853109  	MOV FARG_segment_write_pos, _i+0
0x02FF	0x316B    	ACALL _segment_write
;rot_enc.c,120 :: 		i++;
0x0301	0x0531    	INC _i
;rot_enc.c,122 :: 		if(i > 3)
0x0303	0xD3      	SETB C
0x0304	0xE531    	MOV A, _i
0x0306	0x9403    	SUBB A, #3
0x0308	0x4003    	JC L_Timer_3_ISR11
;rot_enc.c,124 :: 		i = 0;
0x030A	0x753100  	MOV _i, #0
;rot_enc.c,125 :: 		}
L_Timer_3_ISR11:
;rot_enc.c,127 :: 		TMR3CN &= 0x7F;
0x030D	0x53917F  	ANL TMR3CN, #127
;rot_enc.c,128 :: 		}
0x0310	0xD083    	POP DPH
0x0312	0xD082    	POP DPL
0x0314	0xD0F0    	POP B
0x0316	0xD0E0    	POP ACC
0x0318	0xD0D0    	POP PSW
0x031A	0xD007    	POP R7
0x031C	0xD005    	POP R5
0x031E	0xD004    	POP R4
0x0320	0xD002    	POP R2
0x0322	0xD001    	POP R1
0x0324	0xD000    	POP R0
0x0326	0x32      	RETI
; end of _Timer_3_ISR
0x0340	0x7830    	MOV R0, 48
0x0342	0x7909    	MOV R1, 9
0x0344	0x758233  	MOV DPL, 51
0x0347	0x758303  	MOV DPH, 3
0x034A	0x12012D  	LCALL 301
0x034D	0x22      	RET
;rot_enc.c,19 :: _segment_code
0x0327	0xC0F9A4 ;_segment_code+0
0x032A	0xB09992 ;_segment_code+3
0x032D	0x82F880 ;_segment_code+6
0x0330	0x907FBF ;_segment_code+9
; end of _segment_code
;rot_enc.c,0 :: ?ICS_present_clock_state
0x0333	0x00 ;?ICS_present_clock_state+0
; end of ?ICS_present_clock_state
;rot_enc.c,0 :: ?ICS_i
0x0334	0x00 ;?ICS_i+0
; end of ?ICS_i
;rot_enc.c,0 :: ?ICS_val
0x0335	0x00 ;?ICS_val+0
; end of ?ICS_val
;rot_enc.c,0 :: ?ICS_step_size
0x0336	0x0100 ;?ICS_step_size+0
; end of ?ICS_step_size
;rot_enc.c,0 :: ?ICS_past_clock_state
0x0338	0x00 ;?ICS_past_clock_state+0
; end of ?ICS_past_clock_state
;rot_enc.c,0 :: ?ICS_value
0x0339	0x0000 ;?ICS_value+0
; end of ?ICS_value
;rot_enc.c,0 :: ?ICS_data_state
0x033B	0x00 ;?ICS_data_state+0
; end of ?ICS_data_state
;rot_enc.c,36 :: _display_pos
0x033C	0xF7FBFD ;_display_pos+0
0x033F	0xFE ;_display_pos+3
; end of _display_pos
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0076       [4]    _Oscillator_Init
0x007A       [7]    _PCA_Init
0x0081      [10]    _Interrupts_Init
0x008B      [51]    _write_74HC595
0x00BE      [85]    _Div_16x16_U
0x0113      [13]    _Port_IO_Init
0x0120      [13]    _Timer_Init
0x012D       [8]    ___CC2D
0x0135      [54]    _Div_16x16_S
0x016B      [51]    _segment_write
0x019E      [18]    _Mul_16x16
0x01B0      [11]    _Init_Device
0x01BB      [63]    _main
0x01FA     [125]    _EXTI_0_ISR
0x0277     [176]    _Timer_3_ISR
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    FARG_segment_write_disp
0x0009       [1]    FARG_segment_write_pos
0x000A       [1]    FARG_write_74HC595_send_data
0x000B       [1]    write_74HC595_clks_L0
0x0030       [1]    _present_clock_state
0x0031       [1]    _i
0x0032       [1]    _val
0x0033       [2]    _step_size
0x0035       [1]    _past_clock_state
0x0036       [2]    _value
0x0038       [1]    _data_state
0x0080       [0]    P0_1_bit
0x0080       [0]    P0_0_bit
0x0080       [0]    P0_2_bit
0x0081       [1]    SP
0x0082       [1]    DPL
0x0083       [1]    DPH
0x0088       [1]    TCON
0x0090       [0]    P1_7_bit
0x0090       [0]    P1_5_bit
0x0090       [0]    P1_6_bit
0x0091       [1]    TMR3CN
0x0092       [1]    TMR3RLL
0x0093       [1]    TMR3RLH
0x00A5       [1]    P1MDOUT
0x00A8       [1]    IE
0x00B2       [1]    OSCICN
0x00B8       [1]    IP
0x00D0       [1]    PSW
0x00D0       [0]    OV_bit
0x00D0       [0]    F0_bit
0x00D4       [1]    P0SKIP
0x00D5       [1]    P1SKIP
0x00D9       [1]    PCA0MD
0x00E0       [1]    ACC
0x00E2       [1]    XBR1
0x00E6       [1]    EIE1
0x00F0       [1]    B
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0327      [12]    _segment_code
0x0333       [1]    ?ICS_present_clock_state
0x0334       [1]    ?ICS_i
0x0335       [1]    ?ICS_val
0x0336       [2]    ?ICS_step_size
0x0338       [1]    ?ICS_past_clock_state
0x0339       [2]    ?ICS_value
0x033B       [1]    ?ICS_data_state
0x033C       [4]    _display_pos
//** Label List: ** 
//----------------------------------------------
  L_EXTI_0_ISR0
  L_EXTI_0_ISR1
  L_EXTI_0_ISR2
  L_EXTI_0_ISR3
  L_EXTI_0_ISR4
  L_Timer_3_ISR5
  L_Timer_3_ISR6
  L_Timer_3_ISR7
  L_Timer_3_ISR8
  L_Timer_3_ISR9
  L_Timer_3_ISR10
  L_Timer_3_ISR11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_write_74HC59518
  L_write_74HC59519
  L_write_74HC59520
  L_write_74HC59521
  _EXTI_0_ISR
  _Timer_3_ISR
  _main
  _PCA_Init
  _Timer_Init
  _Port_IO_Init
  _Oscillator_Init
  _Interrupts_Init
  _Init_Device
  _write_74HC595
  L__write_74HC59522
  L__write_74HC59523
  _segment_write
  lab_end
  loop_lab
  lab_end1
  lab_loop1
  lab_end2
  lab_loop3
  __Div_8x8_S_Bpositive
  __Div_8x8_S_Apositive
  __Div_8x8_S_Skip_Div
  __Div_8x8_S_div_ret
  __op2hi_not_zero
  __op1hi_not_zero
  __Div_16x16_U_Loop1
  __Div_16x16_U_Lab1
  __Div_16x16_U_div_ret
  __Div_16x16_U_Loop2
  __Div_16x16_U_Lab2
  __Div_16x16_U_Lab3
  __Div_16x16_S_op2hipositive
  __Div_16x16_S_op1hipositive
  __Div_16x16_S_Skip_Udiv
  __Div_16x16_S_div_ret
  __Div_32x32_U_start
  __Div_32x32_U_aux
  __Div_32x32_U_l2
  __Div_32x32_U_l1
  lw_1
  lw_2
  __Div_32x32_U_l3
  lw_3
  __Div_32x32_U_l4
  __Div_32x32_U_IR_l0
  __Div_32x32_U_l5
  __Div_32x32_U_l6
  __Div_32x32_U_l8
  __Div_32x32_U_l7
  __Div_32x32_U_IR_l1
  __Div_32x32_U_l10
  __Div_32x32_U_l9
  __Div_32x32_U_IR_l2
  __Div_32x32_S_l1
  __Div_32x32_S_call_uns
  __Div_32x32_S_l2
  __Div_32x32_S_l3
  __Div_32x32_S_div_ret
  __shl_long
  __shr_longint
  __shr_longword
  _Mul_16x16
  _Mul_32x32
  _Div_8x8_S
  _Div_16x16_U
  _Div_16x16_S
  _Div_32x32_U
  _Div_32x32_S
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
  L_EXTI_0_ISR0
  L_EXTI_0_ISR1
  L_EXTI_0_ISR2
  L_EXTI_0_ISR3
  L_EXTI_0_ISR4
  L_Timer_3_ISR5
  L_Timer_3_ISR6
  L_Timer_3_ISR7
  L_Timer_3_ISR8
  L_Timer_3_ISR9
  L_Timer_3_ISR10
  L_Timer_3_ISR11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_write_74HC59518
  L_write_74HC59519
  L_write_74HC59520
  L_write_74HC59521
  _EXTI_0_ISR
  _Timer_3_ISR
  _main
  _PCA_Init
  _Timer_Init
  _Port_IO_Init
  _Oscillator_Init
  _Interrupts_Init
  _Init_Device
  _write_74HC595
  L__write_74HC59522
  L__write_74HC59523
  _segment_write
  L_EXTI_0_ISR0
  L_EXTI_0_ISR1
  L_EXTI_0_ISR2
  L_EXTI_0_ISR3
  L_EXTI_0_ISR4
  L_Timer_3_ISR5
  L_Timer_3_ISR6
  L_Timer_3_ISR7
  L_Timer_3_ISR8
  L_Timer_3_ISR9
  L_Timer_3_ISR10
  L_Timer_3_ISR11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_write_74HC59518
  L_write_74HC59519
  L_write_74HC59520
  L_write_74HC59521
  _EXTI_0_ISR
  _Timer_3_ISR
  _main
  _PCA_Init
  _Timer_Init
  _Port_IO_Init
  _Oscillator_Init
  _Interrupts_Init
  _Init_Device
  _write_74HC595
  L__write_74HC59522
  L__write_74HC59523
  _segment_write
  lab_end
  loop_lab
  lab_end1
  lab_loop1
  lab_end2
  lab_loop3
  __Div_8x8_S_Bpositive
  __Div_8x8_S_Apositive
  __Div_8x8_S_Skip_Div
  __Div_8x8_S_div_ret
  __op2hi_not_zero
  __op1hi_not_zero
  __Div_16x16_U_Loop1
  __Div_16x16_U_Lab1
  __Div_16x16_U_div_ret
  __Div_16x16_U_Loop2
  __Div_16x16_U_Lab2
  __Div_16x16_U_Lab3
  __Div_16x16_S_op2hipositive
  __Div_16x16_S_op1hipositive
  __Div_16x16_S_Skip_Udiv
  __Div_16x16_S_div_ret
  __Div_32x32_U_start
  __Div_32x32_U_aux
  __Div_32x32_U_l2
  __Div_32x32_U_l1
  lw_1
  lw_2
  __Div_32x32_U_l3
  lw_3
  __Div_32x32_U_l4
  __Div_32x32_U_IR_l0
  __Div_32x32_U_l5
  __Div_32x32_U_l6
  __Div_32x32_U_l8
  __Div_32x32_U_l7
  __Div_32x32_U_IR_l1
  __Div_32x32_U_l10
  __Div_32x32_U_l9
  __Div_32x32_U_IR_l2
  __Div_32x32_S_l1
  __Div_32x32_S_call_uns
  __Div_32x32_S_l2
  __Div_32x32_S_l3
  __Div_32x32_S_div_ret
  __shl_long
  __shr_longint
  __shr_longword
  _Mul_16x16
  _Mul_32x32
  _Div_8x8_S
  _Div_16x16_U
  _Div_16x16_S
  _Div_32x32_U
  _Div_32x32_S
