;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 16-Jul-22 02:01:20 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x02020B  	LJMP 523
0x0003	0x020000  	LJMP 0
0x0006	0x00      	NOP
0x0007	0x00      	NOP
0x0008	0x00      	NOP
0x0009	0x00      	NOP
0x000A	0x00      	NOP
0x000B	0x020000  	LJMP 0
0x000E	0x00      	NOP
0x000F	0x00      	NOP
0x0010	0x00      	NOP
0x0011	0x00      	NOP
0x0012	0x00      	NOP
0x0013	0x020000  	LJMP 0
0x0016	0x00      	NOP
0x0017	0x00      	NOP
0x0018	0x00      	NOP
0x0019	0x00      	NOP
0x001A	0x00      	NOP
0x001B	0x020000  	LJMP 0
0x001E	0x00      	NOP
0x001F	0x00      	NOP
0x0020	0x00      	NOP
0x0021	0x00      	NOP
0x0022	0x00      	NOP
0x0023	0x020000  	LJMP 0
0x0026	0x00      	NOP
0x0027	0x00      	NOP
0x0028	0x00      	NOP
0x0029	0x00      	NOP
0x002A	0x00      	NOP
0x002B	0x0201AC  	LJMP 428
0x002E	0x00      	NOP
0x002F	0x00      	NOP
0x0030	0x00      	NOP
0x0031	0x00      	NOP
0x0032	0x00      	NOP
0x0033	0x020000  	LJMP 0
0x0036	0x00      	NOP
0x0037	0x00      	NOP
0x0038	0x00      	NOP
0x0039	0x00      	NOP
0x003A	0x00      	NOP
0x003B	0x020000  	LJMP 0
0x003E	0x00      	NOP
0x003F	0x00      	NOP
0x0040	0x00      	NOP
0x0041	0x00      	NOP
0x0042	0x00      	NOP
0x0043	0x020000  	LJMP 0
0x0046	0x00      	NOP
0x0047	0x00      	NOP
0x0048	0x00      	NOP
0x0049	0x00      	NOP
0x004A	0x00      	NOP
0x004B	0x020000  	LJMP 0
0x004E	0x00      	NOP
0x004F	0x00      	NOP
0x0050	0x00      	NOP
0x0051	0x00      	NOP
0x0052	0x00      	NOP
0x0053	0x020000  	LJMP 0
0x0056	0x00      	NOP
0x0057	0x00      	NOP
0x0058	0x00      	NOP
0x0059	0x00      	NOP
0x005A	0x00      	NOP
0x005B	0x020000  	LJMP 0
0x005E	0x00      	NOP
0x005F	0x00      	NOP
0x0060	0x00      	NOP
0x0061	0x00      	NOP
0x0062	0x00      	NOP
0x0063	0x020000  	LJMP 0
0x0066	0x00      	NOP
0x0067	0x00      	NOP
0x0068	0x00      	NOP
0x0069	0x00      	NOP
0x006A	0x00      	NOP
0x006B	0x020000  	LJMP 0
0x006E	0x00      	NOP
0x006F	0x00      	NOP
0x0070	0x00      	NOP
0x0071	0x00      	NOP
0x0072	0x00      	NOP
0x0073	0x0202A6  	LJMP 678
_Oscillator_Init:
;tmr.c,209 :: 		void Oscillator_Init(void)
;tmr.c,211 :: 		OSCICN = 0x82;
0x0076	0x75B282  	MOV OSCICN, #130
;tmr.c,212 :: 		}
0x0079	0x22      	RET
; end of _Oscillator_Init
_Port_IO_Init:
;tmr.c,183 :: 		void Port_IO_Init(void)
;tmr.c,203 :: 		P1MDOUT = 0xE0;
0x007A	0x75A5E0  	MOV P1MDOUT, #224
;tmr.c,204 :: 		P1SKIP = 0xFE;
0x007D	0x75D5FE  	MOV P1SKIP, #254
;tmr.c,205 :: 		XBR1 = 0x40;
0x0080	0x75E240  	MOV XBR1, #64
;tmr.c,206 :: 		}
0x0083	0x22      	RET
; end of _Port_IO_Init
_Interrupts_Init:
;tmr.c,215 :: 		void Interrupts_Init(void)
;tmr.c,217 :: 		IE = 0xA0;
0x0084	0x75A8A0  	MOV IE, #160
;tmr.c,218 :: 		EIE1 = 0x80;
0x0087	0x75E680  	MOV EIE1, #128
;tmr.c,219 :: 		}
0x008A	0x22      	RET
; end of _Interrupts_Init
_write_74HC595:
;tmr.c,235 :: 		void write_74HC595(unsigned char send_data)
;tmr.c,237 :: 		signed char clks = 8;
0x008B	0x750C08  	MOV write_74HC595_clks_L0, #8
;tmr.c,239 :: 		while(clks > 0)
L_write_74HC59520:
0x008E	0xD3      	SETB C
0x008F	0x7400    	MOV A, #0
0x0091	0x6480    	XRL A, #128
0x0093	0xF8      	MOV R0, A
0x0094	0xE50C    	MOV A, write_74HC595_clks_L0
0x0096	0x6480    	XRL A, #128
0x0098	0x98      	SUBB A, R0
0x0099	0x4022    	JC L_write_74HC59521
;tmr.c,241 :: 		if((send_data & 0x80) == 0x00)
0x009B	0xE50B    	MOV A, FARG_write_74HC595_send_data
0x009D	0x5480    	ANL A, #128
0x009F	0xF9      	MOV R1, A
0x00A0	0x7004    	JNZ L_write_74HC59522
;tmr.c,243 :: 		LED_DOUT = 0;
0x00A2	0xC296    	CLR P1_6_bit
;tmr.c,244 :: 		}
0x00A4	0x8002    	SJMP L_write_74HC59523
L_write_74HC59522:
;tmr.c,247 :: 		LED_DOUT = 1;
0x00A6	0xD296    	SETB P1_6_bit
;tmr.c,248 :: 		}
L_write_74HC59523:
;tmr.c,250 :: 		LED_CLK = 0;
0x00A8	0xC295    	CLR P1_5_bit
;tmr.c,251 :: 		send_data <<= 1;
0x00AA	0x7801    	MOV R0, #1
0x00AC	0xE50B    	MOV A, FARG_write_74HC595_send_data
0x00AE	0x08      	INC R0
0x00AF	0x8002    	SJMP L__write_74HC59524
L__write_74HC59525:
0x00B1	0xC3      	CLR C
0x00B2	0x33      	RLC A
L__write_74HC59524:
0x00B3	0xD8FC    	DJNZ R0, L__write_74HC59525
0x00B5	0xF50B    	MOV FARG_write_74HC595_send_data, A
;tmr.c,252 :: 		clks--;
0x00B7	0x150C    	DEC write_74HC595_clks_L0
;tmr.c,253 :: 		LED_CLK = 1;
0x00B9	0xD295    	SETB P1_5_bit
;tmr.c,254 :: 		}
0x00BB	0x80D1    	SJMP L_write_74HC59520
L_write_74HC59521:
;tmr.c,255 :: 		}
0x00BD	0x22      	RET
; end of _write_74HC595
_Div_16x16_U:
;__Lib_Math.c,273 :: 		
;__Lib_Math.c,275 :: 		
0x00BE	0xBD000B  	CJNE R5, 0, __op2hi_not_zero
;__Lib_Math.c,276 :: 		
0x00C1	0xB90029  	CJNE R1, 0, __op1hi_not_zero
;__Lib_Math.c,277 :: 		
0x00C4	0xE8      	MOV A, R0
;__Lib_Math.c,278 :: 		
0x00C5	0x8CF0    	MOV B, R4
;__Lib_Math.c,279 :: 		
0x00C7	0x84      	DIV AB
;__Lib_Math.c,280 :: 		
0x00C8	0xF8      	MOV R0, A
;__Lib_Math.c,281 :: 		
0x00C9	0xACF0    	MOV R4, B
;__Lib_Math.c,282 :: 		
0x00CB	0x22      	RET
;__Lib_Math.c,284 :: 		
__op2hi_not_zero:
;__Lib_Math.c,285 :: 		
0x00CC	0xE4      	CLR A
;__Lib_Math.c,286 :: 		
0x00CD	0xCD      	XCH A, R5
;__Lib_Math.c,287 :: 		
0x00CE	0xFF      	MOV R7, A
;__Lib_Math.c,288 :: 		
0x00CF	0x75F008  	MOV B, 8
;__Lib_Math.c,290 :: 		
__Div_16x16_U_Loop1:
;__Lib_Math.c,291 :: 		
0x00D2	0xE8      	MOV A, R0
;__Lib_Math.c,292 :: 		
0x00D3	0x28      	ADD A, R0
;__Lib_Math.c,293 :: 		
0x00D4	0xF8      	MOV R0, A
;__Lib_Math.c,294 :: 		
0x00D5	0xE9      	MOV A, R1
;__Lib_Math.c,295 :: 		
0x00D6	0x33      	RLC A
;__Lib_Math.c,296 :: 		
0x00D7	0xF9      	MOV R1, A
;__Lib_Math.c,297 :: 		
0x00D8	0xED      	MOV A, R5
;__Lib_Math.c,298 :: 		
0x00D9	0x33      	RLC A
;__Lib_Math.c,299 :: 		
0x00DA	0xFD      	MOV R5, A
;__Lib_Math.c,300 :: 		
0x00DB	0xE9      	MOV A, R1
;__Lib_Math.c,301 :: 		
0x00DC	0x9C      	SUBB A, R4
;__Lib_Math.c,302 :: 		
0x00DD	0xED      	MOV A, R5
;__Lib_Math.c,303 :: 		
0x00DE	0x9F      	SUBB A, R7
;__Lib_Math.c,304 :: 		
0x00DF	0x4005    	JC __Div_16x16_U_Lab1
;__Lib_Math.c,305 :: 		
0x00E1	0xFD      	MOV R5, A
;__Lib_Math.c,306 :: 		
0x00E2	0xE9      	MOV A, R1
;__Lib_Math.c,307 :: 		
0x00E3	0x9C      	SUBB A, R4
;__Lib_Math.c,308 :: 		
0x00E4	0xF9      	MOV R1, A
;__Lib_Math.c,309 :: 		
0x00E5	0x08      	INC R0
;__Lib_Math.c,311 :: 		
__Div_16x16_U_Lab1:
;__Lib_Math.c,312 :: 		
0x00E6	0xD5F0E9  	DJNZ B, __Div_16x16_U_Loop1
;__Lib_Math.c,313 :: 		
0x00E9	0xE4      	CLR A
;__Lib_Math.c,314 :: 		
0x00EA	0xC9      	XCH A, R1
;__Lib_Math.c,315 :: 		
0x00EB	0xFC      	MOV R4, A
;__Lib_Math.c,316 :: 		
0x00EC	0x22      	RET
;__Lib_Math.c,318 :: 		
__op1hi_not_zero:
;__Lib_Math.c,319 :: 		
0x00ED	0xEC      	MOV A, R4
;__Lib_Math.c,320 :: 		
0x00EE	0xFF      	MOV R7, A
;__Lib_Math.c,321 :: 		
0x00EF	0xF5F0    	MOV B, A
;__Lib_Math.c,322 :: 		
0x00F1	0xE9      	MOV A, R1
;__Lib_Math.c,323 :: 		
0x00F2	0x84      	DIV AB
;__Lib_Math.c,324 :: 		
0x00F3	0x20D21C  	JB OV_bit, __Div_16x16_U_div_ret
;__Lib_Math.c,325 :: 		
0x00F6	0xF9      	MOV R1, A
;__Lib_Math.c,326 :: 		
0x00F7	0xACF0    	MOV R4, B
;__Lib_Math.c,327 :: 		
0x00F9	0x75F008  	MOV B, 8
;__Lib_Math.c,329 :: 		
__Div_16x16_U_Loop2:
;__Lib_Math.c,330 :: 		
0x00FC	0xE8      	MOV A, R0
;__Lib_Math.c,331 :: 		
0x00FD	0x28      	ADD A, R0
;__Lib_Math.c,332 :: 		
0x00FE	0xF8      	MOV R0, A
;__Lib_Math.c,333 :: 		
0x00FF	0xEC      	MOV A, R4
;__Lib_Math.c,334 :: 		
0x0100	0x33      	RLC A
;__Lib_Math.c,335 :: 		
0x0101	0xFC      	MOV R4, A
;__Lib_Math.c,336 :: 		
0x0102	0x4007    	JC __Div_16x16_U_Lab2
;__Lib_Math.c,337 :: 		
0x0104	0x9F      	SUBB A, R7
;__Lib_Math.c,338 :: 		
0x0105	0x5006    	JNC __Div_16x16_U_Lab3
;__Lib_Math.c,339 :: 		
0x0107	0xD5F0F2  	DJNZ B, __Div_16x16_U_Loop2
;__Lib_Math.c,340 :: 		
0x010A	0x22      	RET
;__Lib_Math.c,342 :: 		
__Div_16x16_U_Lab2:
;__Lib_Math.c,343 :: 		
0x010B	0xC3      	CLR C
;__Lib_Math.c,344 :: 		
0x010C	0x9F      	SUBB A, R7
;__Lib_Math.c,345 :: 		
__Div_16x16_U_Lab3:
;__Lib_Math.c,346 :: 		
0x010D	0xFC      	MOV R4, A
;__Lib_Math.c,347 :: 		
0x010E	0x08      	INC R0
;__Lib_Math.c,348 :: 		
0x010F	0xD5F0EA  	DJNZ B, __Div_16x16_U_Loop2
;__Lib_Math.c,350 :: 		
__Div_16x16_U_div_ret:
;__Lib_Math.c,352 :: 		
0x0112	0x22      	RET
; end of _Div_16x16_U
_PCA_Init:
;tmr.c,166 :: 		void PCA_Init(void)
;tmr.c,168 :: 		PCA0MD &= ~0x40;
0x0113	0x53D9BF  	ANL PCA0MD, #191
;tmr.c,169 :: 		PCA0MD = 0x00;
0x0116	0x75D900  	MOV PCA0MD, #0
;tmr.c,170 :: 		}
0x0119	0x22      	RET
; end of _PCA_Init
_Timer_Init:
;tmr.c,173 :: 		void Timer_Init(void)
;tmr.c,175 :: 		TMR2RLL = 0x02;
0x011A	0x75CA02  	MOV TMR2RLL, #2
;tmr.c,176 :: 		TMR2RLH = 0xFC;
0x011D	0x75CBFC  	MOV TMR2RLH, #252
;tmr.c,177 :: 		TMR3CN = 0x04;
0x0120	0x759104  	MOV TMR3CN, #4
;tmr.c,178 :: 		TMR3RLL = 0x02;
0x0123	0x759202  	MOV TMR3RLL, #2
;tmr.c,179 :: 		TMR3RLH = 0xFC;
0x0126	0x7593FC  	MOV TMR3RLH, #252
;tmr.c,180 :: 		}
0x0129	0x22      	RET
; end of _Timer_Init
_segment_write:
;tmr.c,258 :: 		void segment_write(unsigned char disp, unsigned char pos)
;tmr.c,260 :: 		LED_LATCH = 0;
0x012A	0xC297    	CLR P1_7_bit
;tmr.c,261 :: 		write_74HC595(segment_code[disp]);
0x012C	0xE509    	MOV A, FARG_segment_write_disp
0x012E	0x244E    	ADD A, lo_addr(_segment_code)
0x0130	0xF9      	MOV R1, A
0x0131	0xE4      	CLR A
0x0132	0x3403    	ADDC A, hi_addr(_segment_code)
0x0134	0xFA      	MOV R2, A
0x0135	0x850182  	MOV DPL, 1
0x0138	0x850283  	MOV DPH, 2
0x013B	0xE4      	CLR A
0x013C	0x93      	MOVC A, @A+DPTR
0x013D	0xF8      	MOV R0, A
0x013E	0x85000B  	MOV FARG_write_74HC595_send_data, 0
0x0141	0x118B    	ACALL _write_74HC595
;tmr.c,262 :: 		write_74HC595(display_pos[pos]);
0x0143	0xE50A    	MOV A, FARG_segment_write_pos
0x0145	0x2460    	ADD A, lo_addr(_display_pos)
0x0147	0xF9      	MOV R1, A
0x0148	0xE4      	CLR A
0x0149	0x3403    	ADDC A, hi_addr(_display_pos)
0x014B	0xFA      	MOV R2, A
0x014C	0x850182  	MOV DPL, 1
0x014F	0x850283  	MOV DPH, 2
0x0152	0xE4      	CLR A
0x0153	0x93      	MOVC A, @A+DPTR
0x0154	0xF8      	MOV R0, A
0x0155	0x85000B  	MOV FARG_write_74HC595_send_data, 0
0x0158	0x118B    	ACALL _write_74HC595
;tmr.c,263 :: 		LED_LATCH = 1;
0x015A	0xD297    	SETB P1_7_bit
;tmr.c,265 :: 		}
0x015C	0x22      	RET
; end of _segment_write
___CC2D:
;__Lib_System.c,13 :: 		
;__Lib_System.c,15 :: 		
_CC2D_Loop1:
;__Lib_System.c,16 :: 		
0x015D	0xE4      	CLR A
;__Lib_System.c,17 :: 		
0x015E	0x93      	MOVC A, @A+DPTR
;__Lib_System.c,18 :: 		
0x015F	0xF6      	MOV @R0, A
;__Lib_System.c,19 :: 		
0x0160	0x08      	INC R0
;__Lib_System.c,20 :: 		
0x0161	0xA3      	INC DPTR
;__Lib_System.c,21 :: 		
0x0162	0xD9F9    	DJNZ R1, _CC2D_Loop1
;__Lib_System.c,23 :: 		
0x0164	0x22      	RET
; end of ___CC2D
_Div_16x16_S:
;__Lib_Math.c,371 :: 		
;__Lib_Math.c,373 :: 		
0x0165	0xC2D5    	CLR F0_bit
;__Lib_Math.c,374 :: 		
0x0167	0xED      	MOV A, R5
;__Lib_Math.c,375 :: 		
0x0168	0x30E709  	JNB 231, __Div_16x16_S_op2hipositive
;__Lib_Math.c,376 :: 		
0x016B	0xB2D5    	CPL F0_bit
;__Lib_Math.c,377 :: 		
0x016D	0xE4      	CLR A
;__Lib_Math.c,378 :: 		
0x016E	0xC3      	CLR C
;__Lib_Math.c,379 :: 		
0x016F	0x9C      	SUBB A, R4
;__Lib_Math.c,380 :: 		
0x0170	0xFC      	MOV R4, A
;__Lib_Math.c,381 :: 		
0x0171	0xE4      	CLR A
;__Lib_Math.c,382 :: 		
0x0172	0x9D      	SUBB A, R5
;__Lib_Math.c,383 :: 		
0x0173	0xFD      	MOV R5, A
;__Lib_Math.c,385 :: 		
__Div_16x16_S_op2hipositive:
;__Lib_Math.c,386 :: 		
0x0174	0xE9      	MOV A, R1
;__Lib_Math.c,387 :: 		
0x0175	0x30E715  	JNB 231, __Div_16x16_S_op1hipositive
;__Lib_Math.c,388 :: 		
0x0178	0xB2D5    	CPL F0_bit
;__Lib_Math.c,389 :: 		
0x017A	0xE4      	CLR A
;__Lib_Math.c,390 :: 		
0x017B	0xC3      	CLR C
;__Lib_Math.c,391 :: 		
0x017C	0x98      	SUBB A, R0
;__Lib_Math.c,392 :: 		
0x017D	0xF8      	MOV R0, A
;__Lib_Math.c,393 :: 		
0x017E	0xE4      	CLR A
;__Lib_Math.c,394 :: 		
0x017F	0x99      	SUBB A, R1
;__Lib_Math.c,395 :: 		
0x0180	0xF9      	MOV R1, A
;__Lib_Math.c,396 :: 		
0x0181	0x1200BE  	LCALL _Div_16x16_U
;__Lib_Math.c,397 :: 		
0x0184	0xC3      	CLR C
;__Lib_Math.c,398 :: 		
0x0185	0xE4      	CLR A
;__Lib_Math.c,399 :: 		
0x0186	0x9C      	SUBB A, R4
;__Lib_Math.c,400 :: 		
0x0187	0xFC      	MOV R4, A
;__Lib_Math.c,401 :: 		
0x0188	0xE4      	CLR A
;__Lib_Math.c,402 :: 		
0x0189	0x9D      	SUBB A, R5
;__Lib_Math.c,403 :: 		
0x018A	0xFD      	MOV R5, A
;__Lib_Math.c,404 :: 		
0x018B	0x8003    	SJMP __Div_16x16_S_Skip_Udiv
;__Lib_Math.c,406 :: 		
__Div_16x16_S_op1hipositive:
;__Lib_Math.c,407 :: 		
0x018D	0x1200BE  	LCALL _Div_16x16_U
;__Lib_Math.c,409 :: 		
__Div_16x16_S_Skip_Udiv:
;__Lib_Math.c,410 :: 		
0x0190	0x30D507  	JNB F0_bit, __Div_16x16_S_div_ret
;__Lib_Math.c,411 :: 		
0x0193	0xC3      	CLR C
;__Lib_Math.c,412 :: 		
0x0194	0xE4      	CLR A
;__Lib_Math.c,413 :: 		
0x0195	0x98      	SUBB A, R0
;__Lib_Math.c,414 :: 		
0x0196	0xF8      	MOV R0, A
;__Lib_Math.c,415 :: 		
0x0197	0xE4      	CLR A
;__Lib_Math.c,416 :: 		
0x0198	0x99      	SUBB A, R1
;__Lib_Math.c,417 :: 		
0x0199	0xF9      	MOV R1, A
;__Lib_Math.c,419 :: 		
__Div_16x16_S_div_ret:
;__Lib_Math.c,421 :: 		
0x019A	0x22      	RET
; end of _Div_16x16_S
_Init_Device:
;tmr.c,222 :: 		void Init_Device(void)
;tmr.c,224 :: 		PCA_Init();
0x019B	0x3113    	ACALL _PCA_Init
;tmr.c,225 :: 		Timer_Init();
0x019D	0x311A    	ACALL _Timer_Init
;tmr.c,226 :: 		Port_IO_Init();
0x019F	0x117A    	ACALL _Port_IO_Init
;tmr.c,227 :: 		Oscillator_Init();
0x01A1	0x1176    	ACALL _Oscillator_Init
;tmr.c,228 :: 		Interrupts_Init();
0x01A3	0x1184    	ACALL _Interrupts_Init
;tmr.c,229 :: 		LED_LATCH = 1;
0x01A5	0xD297    	SETB P1_7_bit
;tmr.c,230 :: 		LED_CLK = 1;
0x01A7	0xD295    	SETB P1_5_bit
;tmr.c,231 :: 		LED_DOUT = 0;
0x01A9	0xC296    	CLR P1_6_bit
;tmr.c,232 :: 		}
0x01AB	0x22      	RET
; end of _Init_Device
_Timer_2_ISR:
0x01AC	0xC000    	PUSH R0
0x01AE	0xC0D0    	PUSH PSW
0x01B0	0xC0E0    	PUSH ACC
0x01B2	0xC0F0    	PUSH B
0x01B4	0xC082    	PUSH DPL
0x01B6	0xC083    	PUSH DPH
;tmr.c,56 :: 		ics ICS_AUTO
;tmr.c,58 :: 		ms++;
0x01B8	0x7401    	MOV A, #1
0x01BA	0x2531    	ADD A, _ms
0x01BC	0xF531    	MOV _ms, A
0x01BE	0x7400    	MOV A, #0
0x01C0	0x3532    	ADDC A, _ms+1
0x01C2	0xF532    	MOV _ms+1, A
;tmr.c,59 :: 		if(ms > 999)
0x01C4	0xD3      	SETB C
0x01C5	0xE531    	MOV A, _ms
0x01C7	0x94E7    	SUBB A, #231
0x01C9	0xE532    	MOV A, _ms+1
0x01CB	0x9403    	SUBB A, #3
0x01CD	0x402C    	JC L_Timer_2_ISR0
;tmr.c,61 :: 		ms = 0;
0x01CF	0x753100  	MOV _ms, #0
0x01D2	0x753200  	MOV _ms+1, #0
;tmr.c,62 :: 		s--;
0x01D5	0xC3      	CLR C
0x01D6	0xE533    	MOV A, _s
0x01D8	0x9401    	SUBB A, #1
0x01DA	0xF533    	MOV _s, A
0x01DC	0xE534    	MOV A, _s+1
0x01DE	0x9400    	SUBB A, #0
0x01E0	0xF534    	MOV _s+1, A
;tmr.c,64 :: 		if(s < 0)
0x01E2	0xC3      	CLR C
0x01E3	0xE533    	MOV A, _s
0x01E5	0x9400    	SUBB A, #0
0x01E7	0x7400    	MOV A, #0
0x01E9	0x6480    	XRL A, #128
0x01EB	0xF8      	MOV R0, A
0x01EC	0xE534    	MOV A, _s+1
0x01EE	0x6480    	XRL A, #128
0x01F0	0x98      	SUBB A, R0
0x01F1	0x5008    	JNC L_Timer_2_ISR1
;tmr.c,66 :: 		s = 0;
0x01F3	0x753300  	MOV _s, #0
0x01F6	0x753400  	MOV _s+1, #0
;tmr.c,67 :: 		TR2_bit = 0;
0x01F9	0xC2CA    	CLR TR2_bit
;tmr.c,68 :: 		}
L_Timer_2_ISR1:
;tmr.c,69 :: 		}
L_Timer_2_ISR0:
;tmr.c,71 :: 		TMR2CN &= 0x7F;
0x01FB	0x53C87F  	ANL TMR2CN, #127
;tmr.c,72 :: 		}
0x01FE	0xD083    	POP DPH
0x0200	0xD082    	POP DPL
0x0202	0xD0F0    	POP B
0x0204	0xD0E0    	POP ACC
0x0206	0xD0D0    	POP PSW
0x0208	0xD000    	POP R0
0x020A	0x32      	RETI
; end of _Timer_2_ISR
_main:
0x020B	0x758180  	MOV SP, #128
0x020E	0x120364  	LCALL 868
;tmr.c,117 :: 		void main(void)
;tmr.c,119 :: 		unsigned char set_time = 0;
0x0211	0x750800  	MOV main_set_time_L0, #0
;tmr.c,120 :: 		Init_Device();
0x0214	0x319B    	ACALL _Init_Device
;tmr.c,122 :: 		while(1)
L_main9:
;tmr.c,124 :: 		if(SET == 0)
0x0216	0x209414  	JB P1_4_bit, L_main11
;tmr.c,126 :: 		delay_ms(40);
0x0219	0x7D03    	MOV R5, 3
0x021B	0x7E7D    	MOV R6, 125
0x021D	0x7F59    	MOV R7, 89
0x021F	0xDFFE    	DJNZ R7, PC-2
0x0221	0xDEFC    	DJNZ R6, PC-4
0x0223	0xDDFA    	DJNZ R5, PC-6
;tmr.c,127 :: 		while(SET == 0);
L_main12:
0x0225	0x209402  	JB P1_4_bit, L_main13
0x0228	0x80FB    	SJMP L_main12
L_main13:
;tmr.c,129 :: 		set_time = 1;
0x022A	0x750801  	MOV main_set_time_L0, #1
;tmr.c,130 :: 		}
L_main11:
;tmr.c,132 :: 		if(set_time == 1)
0x022D	0xE508    	MOV A, main_set_time_L0
0x022F	0x6401    	XRL A, #1
0x0231	0x6002    	JZ #2
0x0233	0x41A2    	AJMP L_main14
;tmr.c,134 :: 		if(INC == 0)
0x0235	0x20932F  	JB P1_3_bit, L_main15
;tmr.c,136 :: 		delay_ms(40);
0x0238	0x7D03    	MOV R5, 3
0x023A	0x7E7D    	MOV R6, 125
0x023C	0x7F59    	MOV R7, 89
0x023E	0xDFFE    	DJNZ R7, PC-2
0x0240	0xDEFC    	DJNZ R6, PC-4
0x0242	0xDDFA    	DJNZ R5, PC-6
;tmr.c,137 :: 		s++;
0x0244	0x7401    	MOV A, #1
0x0246	0x2533    	ADD A, _s
0x0248	0xF533    	MOV _s, A
0x024A	0x7400    	MOV A, #0
0x024C	0x3534    	ADDC A, _s+1
0x024E	0xF534    	MOV _s+1, A
;tmr.c,139 :: 		if(s >= 9999)
0x0250	0xC3      	CLR C
0x0251	0xE533    	MOV A, _s
0x0253	0x940F    	SUBB A, #15
0x0255	0x7427    	MOV A, #39
0x0257	0x6480    	XRL A, #128
0x0259	0xF8      	MOV R0, A
0x025A	0xE534    	MOV A, _s+1
0x025C	0x6480    	XRL A, #128
0x025E	0x98      	SUBB A, R0
0x025F	0x4006    	JC L_main16
;tmr.c,141 :: 		s = 9999;
0x0261	0x75330F  	MOV _s, #15
0x0264	0x753427  	MOV _s+1, #39
;tmr.c,142 :: 		}
L_main16:
;tmr.c,143 :: 		}
L_main15:
;tmr.c,145 :: 		if(DEC == 0)
0x0267	0x209230  	JB P1_2_bit, L_main17
;tmr.c,147 :: 		delay_ms(40);
0x026A	0x7D03    	MOV R5, 3
0x026C	0x7E7D    	MOV R6, 125
0x026E	0x7F59    	MOV R7, 89
0x0270	0xDFFE    	DJNZ R7, PC-2
0x0272	0xDEFC    	DJNZ R6, PC-4
0x0274	0xDDFA    	DJNZ R5, PC-6
;tmr.c,148 :: 		s--;
0x0276	0xC3      	CLR C
0x0277	0xE533    	MOV A, _s
0x0279	0x9401    	SUBB A, #1
0x027B	0xF533    	MOV _s, A
0x027D	0xE534    	MOV A, _s+1
0x027F	0x9400    	SUBB A, #0
0x0281	0xF534    	MOV _s+1, A
;tmr.c,150 :: 		if(s <= 0)
0x0283	0xD3      	SETB C
0x0284	0xE533    	MOV A, _s
0x0286	0x9400    	SUBB A, #0
0x0288	0x7400    	MOV A, #0
0x028A	0x6480    	XRL A, #128
0x028C	0xF8      	MOV R0, A
0x028D	0xE534    	MOV A, _s+1
0x028F	0x6480    	XRL A, #128
0x0291	0x98      	SUBB A, R0
0x0292	0x5006    	JNC L_main18
;tmr.c,152 :: 		s = 0;
0x0294	0x753300  	MOV _s, #0
0x0297	0x753400  	MOV _s+1, #0
;tmr.c,153 :: 		}
L_main18:
;tmr.c,154 :: 		}
L_main17:
;tmr.c,156 :: 		if(ESC == 0)
0x029A	0x209105  	JB P1_1_bit, L_main19
;tmr.c,158 :: 		TR2_bit = 1;
0x029D	0xD2CA    	SETB TR2_bit
;tmr.c,159 :: 		set_time = 0;
0x029F	0x750800  	MOV main_set_time_L0, #0
;tmr.c,160 :: 		}
L_main19:
;tmr.c,161 :: 		}
L_main14:
;tmr.c,162 :: 		};
0x02A2	0x4116    	AJMP L_main9
;tmr.c,163 :: 		}
0x02A4	0x80FE    	SJMP #254
; end of _main
_Timer_3_ISR:
0x02A6	0xC000    	PUSH R0
0x02A8	0xC001    	PUSH R1
0x02AA	0xC005    	PUSH R5
0x02AC	0xC007    	PUSH R7
0x02AE	0xC0D0    	PUSH PSW
0x02B0	0xC0E0    	PUSH ACC
0x02B2	0xC0F0    	PUSH B
0x02B4	0xC082    	PUSH DPL
0x02B6	0xC083    	PUSH DPH
;tmr.c,78 :: 		ics ICS_AUTO
;tmr.c,80 :: 		switch(i)
0x02B8	0x8054    	SJMP L_Timer_3_ISR2
;tmr.c,82 :: 		case 0:
L_Timer_3_ISR4:
;tmr.c,84 :: 		val = (s / 1000);
0x02BA	0x7CE8    	MOV R4, #232
0x02BC	0x7D03    	MOV R5, #3
0x02BE	0xA833    	MOV R0, _s
0x02C0	0xA934    	MOV R1, _s+1
0x02C2	0x3165    	ACALL _Div_16x16_S
0x02C4	0x850035  	MOV val, 0
;tmr.c,85 :: 		break;
0x02C7	0x6124    	AJMP L_Timer_3_ISR3
;tmr.c,87 :: 		case 1:
L_Timer_3_ISR5:
;tmr.c,89 :: 		val = ((s % 1000) / 100);
0x02C9	0x7CE8    	MOV R4, #232
0x02CB	0x7D03    	MOV R5, #3
0x02CD	0xA833    	MOV R0, _s
0x02CF	0xA934    	MOV R1, _s+1
0x02D1	0x3165    	ACALL _Div_16x16_S
0x02D3	0xA804    	MOV R0, R4
0x02D5	0xA905    	MOV R1, R5
0x02D7	0x7C64    	MOV R4, #100
0x02D9	0x7D00    	MOV R5, #0
0x02DB	0x3165    	ACALL _Div_16x16_S
0x02DD	0x850035  	MOV val, 0
;tmr.c,90 :: 		break;
0x02E0	0x8042    	SJMP L_Timer_3_ISR3
;tmr.c,92 :: 		case 2:
L_Timer_3_ISR6:
;tmr.c,94 :: 		val = ((s % 100) / 10);
0x02E2	0x7C64    	MOV R4, #100
0x02E4	0x7D00    	MOV R5, #0
0x02E6	0xA833    	MOV R0, _s
0x02E8	0xA934    	MOV R1, _s+1
0x02EA	0x3165    	ACALL _Div_16x16_S
0x02EC	0xA804    	MOV R0, R4
0x02EE	0xA905    	MOV R1, R5
0x02F0	0x7C0A    	MOV R4, #10
0x02F2	0x7D00    	MOV R5, #0
0x02F4	0x3165    	ACALL _Div_16x16_S
0x02F6	0x850035  	MOV val, 0
;tmr.c,95 :: 		break;
0x02F9	0x8029    	SJMP L_Timer_3_ISR3
;tmr.c,97 :: 		case 3:
L_Timer_3_ISR7:
;tmr.c,99 :: 		val = (s % 10);
0x02FB	0x7C0A    	MOV R4, #10
0x02FD	0x7D00    	MOV R5, #0
0x02FF	0xA833    	MOV R0, _s
0x0301	0xA934    	MOV R1, _s+1
0x0303	0x3165    	ACALL _Div_16x16_S
0x0305	0xA804    	MOV R0, R4
0x0307	0xA905    	MOV R1, R5
0x0309	0x850035  	MOV val, 0
;tmr.c,100 :: 		break;
0x030C	0x8016    	SJMP L_Timer_3_ISR3
;tmr.c,102 :: 		}
L_Timer_3_ISR2:
0x030E	0xE530    	MOV A, _i
0x0310	0x60A8    	JZ L_Timer_3_ISR4
0x0312	0xE530    	MOV A, _i
0x0314	0x6401    	XRL A, #1
0x0316	0x60B1    	JZ L_Timer_3_ISR5
0x0318	0xE530    	MOV A, _i
0x031A	0x6402    	XRL A, #2
0x031C	0x60C4    	JZ L_Timer_3_ISR6
0x031E	0xE530    	MOV A, _i
0x0320	0x6403    	XRL A, #3
0x0322	0x60D7    	JZ L_Timer_3_ISR7
L_Timer_3_ISR3:
;tmr.c,104 :: 		segment_write(val, i);
0x0324	0x853509  	MOV FARG_segment_write_disp, val+0
0x0327	0x85300A  	MOV FARG_segment_write_pos, _i+0
0x032A	0x312A    	ACALL _segment_write
;tmr.c,106 :: 		i++;
0x032C	0x0530    	INC _i
;tmr.c,108 :: 		if(i > 3)
0x032E	0xD3      	SETB C
0x032F	0xE530    	MOV A, _i
0x0331	0x9403    	SUBB A, #3
0x0333	0x4003    	JC L_Timer_3_ISR8
;tmr.c,110 :: 		i = 0;
0x0335	0x753000  	MOV _i, #0
;tmr.c,111 :: 		}
L_Timer_3_ISR8:
;tmr.c,113 :: 		TMR3CN &= 0x7F;
0x0338	0x53917F  	ANL TMR3CN, #127
;tmr.c,114 :: 		}
0x033B	0xD083    	POP DPH
0x033D	0xD082    	POP DPL
0x033F	0xD0F0    	POP B
0x0341	0xD0E0    	POP ACC
0x0343	0xD0D0    	POP PSW
0x0345	0xD007    	POP R7
0x0347	0xD005    	POP R5
0x0349	0xD001    	POP R1
0x034B	0xD000    	POP R0
0x034D	0x32      	RETI
; end of _Timer_3_ISR
0x0364	0x7830    	MOV R0, 48
0x0366	0x7906    	MOV R1, 6
0x0368	0x75825A  	MOV DPL, 90
0x036B	0x758303  	MOV DPH, 3
0x036E	0x12015D  	LCALL 349
0x0371	0x22      	RET
;tmr.c,16 :: _segment_code
0x034E	0xC0F9A4 ;_segment_code+0
0x0351	0xB09992 ;_segment_code+3
0x0354	0x82F880 ;_segment_code+6
0x0357	0x907FBF ;_segment_code+9
; end of _segment_code
;tmr.c,0 :: ?ICS_i
0x035A	0x00 ;?ICS_i+0
; end of ?ICS_i
;tmr.c,0 :: ?ICS_ms
0x035B	0x0000 ;?ICS_ms+0
; end of ?ICS_ms
;tmr.c,0 :: ?ICS_s
0x035D	0x0000 ;?ICS_s+0
; end of ?ICS_s
;tmr.c,0 :: ?ICSval
0x035F	0x00 ;?ICSval+0
; end of ?ICSval
;tmr.c,33 :: _display_pos
0x0360	0xF7FBFD ;_display_pos+0
0x0363	0xFE ;_display_pos+3
; end of _display_pos
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0076       [4]    _Oscillator_Init
0x007A      [10]    _Port_IO_Init
0x0084       [7]    _Interrupts_Init
0x008B      [51]    _write_74HC595
0x00BE      [85]    _Div_16x16_U
0x0113       [7]    _PCA_Init
0x011A      [16]    _Timer_Init
0x012A      [51]    _segment_write
0x015D       [8]    ___CC2D
0x0165      [54]    _Div_16x16_S
0x019B      [17]    _Init_Device
0x01AC      [95]    _Timer_2_ISR
0x020B     [155]    _main
0x02A6     [168]    _Timer_3_ISR
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    R0
0x0001       [1]    R1
0x0002       [1]    R2
0x0003       [1]    R3
0x0004       [1]    R4
0x0005       [1]    R5
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    main_set_time_L0
0x0009       [1]    FARG_segment_write_disp
0x000A       [1]    FARG_segment_write_pos
0x000B       [1]    FARG_write_74HC595_send_data
0x000C       [1]    write_74HC595_clks_L0
0x0030       [1]    _i
0x0031       [2]    _ms
0x0033       [2]    _s
0x0035       [1]    val
0x0081       [1]    SP
0x0082       [1]    DPL
0x0083       [1]    DPH
0x0090       [0]    P1_4_bit
0x0090       [0]    P1_3_bit
0x0090       [0]    P1_6_bit
0x0090       [0]    P1_5_bit
0x0090       [0]    P1_2_bit
0x0090       [0]    P1_1_bit
0x0090       [0]    P1_7_bit
0x0091       [1]    TMR3CN
0x0092       [1]    TMR3RLL
0x0093       [1]    TMR3RLH
0x00A5       [1]    P1MDOUT
0x00A8       [1]    IE
0x00B2       [1]    OSCICN
0x00C8       [1]    TMR2CN
0x00C8       [0]    TR2_bit
0x00CA       [1]    TMR2RLL
0x00CB       [1]    TMR2RLH
0x00D0       [1]    PSW
0x00D0       [0]    F0_bit
0x00D0       [0]    OV_bit
0x00D5       [1]    P1SKIP
0x00D9       [1]    PCA0MD
0x00E0       [1]    ACC
0x00E2       [1]    XBR1
0x00E6       [1]    EIE1
0x00F0       [1]    B
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x034E      [12]    _segment_code
0x035A       [1]    ?ICS_i
0x035B       [2]    ?ICS_ms
0x035D       [2]    ?ICS_s
0x035F       [1]    ?ICSval
0x0360       [4]    _display_pos
//** Label List: ** 
//----------------------------------------------
  L_Timer_2_ISR0
  L_Timer_2_ISR1
  L_Timer_3_ISR2
  L_Timer_3_ISR3
  L_Timer_3_ISR4
  L_Timer_3_ISR5
  L_Timer_3_ISR6
  L_Timer_3_ISR7
  L_Timer_3_ISR8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_write_74HC59520
  L_write_74HC59521
  L_write_74HC59522
  L_write_74HC59523
  _Timer_2_ISR
  _Timer_3_ISR
  _main
  _PCA_Init
  _Timer_Init
  _Port_IO_Init
  _Oscillator_Init
  _Interrupts_Init
  _Init_Device
  _write_74HC595
  L__write_74HC59524
  L__write_74HC59525
  _segment_write
  _CC2D_Loop1
  _CC2PD_Loop1
  _CC2XD_Loop1
  ___DoIFC
  ___CC2D
  ___CC2PD
  ___CC2XD
  L_Timer_2_ISR0
  L_Timer_2_ISR1
  L_Timer_3_ISR2
  L_Timer_3_ISR3
  L_Timer_3_ISR4
  L_Timer_3_ISR5
  L_Timer_3_ISR6
  L_Timer_3_ISR7
  L_Timer_3_ISR8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_write_74HC59520
  L_write_74HC59521
  L_write_74HC59522
  L_write_74HC59523
  _Timer_2_ISR
  _Timer_3_ISR
  _main
  _PCA_Init
  _Timer_Init
  _Port_IO_Init
  _Oscillator_Init
  _Interrupts_Init
  _Init_Device
  _write_74HC595
  L__write_74HC59524
  L__write_74HC59525
  _segment_write
  lab_end
  loop_lab
  lab_end1
  lab_loop1
  lab_end2
  lab_loop3
  __Div_8x8_S_Bpositive
  __Div_8x8_S_Apositive
  __Div_8x8_S_Skip_Div
  __Div_8x8_S_div_ret
  __op2hi_not_zero
  __op1hi_not_zero
  __Div_16x16_U_Loop1
  __Div_16x16_U_Lab1
  __Div_16x16_U_div_ret
  __Div_16x16_U_Loop2
  __Div_16x16_U_Lab2
  __Div_16x16_U_Lab3
  __Div_16x16_S_op2hipositive
  __Div_16x16_S_op1hipositive
  __Div_16x16_S_Skip_Udiv
  __Div_16x16_S_div_ret
  __Div_32x32_U_start
  __Div_32x32_U_aux
  __Div_32x32_U_l2
  __Div_32x32_U_l1
  lw_1
  lw_2
  __Div_32x32_U_l3
  lw_3
  __Div_32x32_U_l4
  __Div_32x32_U_IR_l0
  __Div_32x32_U_l5
  __Div_32x32_U_l6
  __Div_32x32_U_l8
  __Div_32x32_U_l7
  __Div_32x32_U_IR_l1
  __Div_32x32_U_l10
  __Div_32x32_U_l9
  __Div_32x32_U_IR_l2
  __Div_32x32_S_l1
  __Div_32x32_S_call_uns
  __Div_32x32_S_l2
  __Div_32x32_S_l3
  __Div_32x32_S_div_ret
  __shl_long
  __shr_longint
  __shr_longword
  _Mul_16x16
  _Mul_32x32
  _Div_8x8_S
  _Div_16x16_U
  _Div_16x16_S
  _Div_32x32_U
  _Div_32x32_S
  L_Timer_2_ISR0
  L_Timer_2_ISR1
  L_Timer_3_ISR2
  L_Timer_3_ISR3
  L_Timer_3_ISR4
  L_Timer_3_ISR5
  L_Timer_3_ISR6
  L_Timer_3_ISR7
  L_Timer_3_ISR8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_write_74HC59520
  L_write_74HC59521
  L_write_74HC59522
  L_write_74HC59523
  _Timer_2_ISR
  _Timer_3_ISR
  _main
  _PCA_Init
  _Timer_Init
  _Port_IO_Init
  _Oscillator_Init
  _Interrupts_Init
  _Init_Device
  _write_74HC595
  L__write_74HC59524
  L__write_74HC59525
  _segment_write
